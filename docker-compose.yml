version: '3'
services:
  db:
    image: postgres:latest
    restart: always
    environment:
      - POSTGRES_PASSWORD=password
      - POSTGRES_USER=deepfijdb
    volumes:
      - ${POSTGRES_VOLUME}:/var/lib/postgresql/data
  quote:
    image: fijbook-quote:1.0.1
    restart: on-failure
    depends_on:
      - db
    environment:
      - DBHOST=db
      - DBUSER=deepfijdb
      - DBPASSWORD=password
      - QUOTE_SERVER_PORT
    expose:
      - ${QUOTE_SERVER_PORT}
  user:
    image: fijbook-user:1.0.0
    restart: on-failure
    depends_on:
      - db
    environment:
      - DBHOST=db
      - DBUSER=deepfijdb
      - DBPASSWORD=password
      - USER_SERVER_PORT
    expose:
      - ${USER_SERVER_PORT}
  schedule:
    image: fijbook-schedule:latest
    restart: on-failure
    depends_on:
      - db
    environment:
      - DBHOST=db
      - DBUSER=deepfijdb
      - DBPASSWORD=password
      - SCHED_SERVER_PORT
    expose:
      - ${SCHED_SERVER_PORT}
  news:
    image: fijbook-news:1.0.0
    depends_on:
      - db
    environment:
      - DBHOST=db
      - DBUSER=deepfijdb
      - DBPASSWORD=password
      - NEWS_SERVER_PORT
    expose:
      - ${NEWS_SERVER_PORT}
  scraping:
    image: fijbook-scraper:1.0.0
    depends_on:
      - db
      - schedule
    environment:
      - DBHOST=db
      - DBUSER=deepfijdb
      - DBPASSWORD=password
      - SCHED_SERVER_HOST=schedule
      - SCHED_SERVER_PORT
      - SCRAPE_SERVER_PORT
    expose:
      - ${SCRAPE_SERVER_PORT}
  frontend:
    image: fijbook-fe:1.0.2
    ports:
      - 80:9000
    depends_on:
      - user
      - quote
      - schedule
      - news
      - scraping
    environment:
      - AWS_SMTP_USERNAME
      - AWS_SMTP_PASSWORD
      - PLAY_APPLICATION_DIR
      - PLAY_APPLICATION_LOG
      - USER_SERVER_PORT
      - SCHED_SERVER_PORT
      - SCRAPE_SERVER_PORT
      - NEWS_SERVER_PORT
      - QUOTE_SERVER_PORT
      - application.home=/opt/docker/play
    volumes:
      - ${PLAY_APPLICATION_DIR}:/opt/docker/playbg
      - ${PLAY_APPLICATION_LOG}:/opt/docker/logs
